{"version":3,"sources":["webpack:///./src/components/presentation/buttons/tagButton/tagButtonStyles.module.scss","webpack:///./src/components/presentation/buttons/tagButton/tagButton.jsx","webpack:///./src/templates/blogPost.js"],"names":["module","exports","TagButton","tag","className","styles","tagButton","to","TagsList","tags","map","idx","key","navLinkStyle","color","Template","data","pageContext","next","previous","markdownRemark","frontmatter","html","style","width","title","date","timeToRead","length","fontSize","dangerouslySetInnerHTML","__html","display","flexDirection","justifyContent","margin","path","opacity"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,6C,+KCSfC,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OAChB,kBAAC,IAAD,CAAMC,UAAWC,IAAOC,UAAWC,GAAE,SAAWJ,GAC7CA,ICECK,EAAW,SAAC,GAAD,QAAGC,KAAH,kBAAU,GAAV,GACVC,KAAI,SAACP,EAAKQ,GACb,OACE,kBAAC,WAAD,CAAUC,IAAKD,GACb,kBAAC,EAAD,CAAWR,IAAKA,IAAQ,SAK1BU,EAAe,CACnBC,MAAO,WAGM,SAASC,EAAT,GAA4C,IAAxBC,EAAuB,EAAvBA,KACjC,EADwD,wBAEtDC,YAAeC,EADjB,EACiBA,KAAMC,EADvB,EACuBA,SAEfC,EAAmBJ,EAAnBI,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKlB,UAAU,sBAAsBmB,MAAO,CAAEC,MAAO,SACnD,yBAAKpB,UAAU,aACb,4BAAKiB,EAAYI,OACjB,4BACGJ,EAAYK,KADf,oBACsCN,EAAeO,WAAY,IADjE,QAICN,EAAYZ,MAAQY,EAAYZ,KAAKmB,QACpC,yBAAKL,MAAO,CAAEM,SAAU,SACtB,yCADF,IACyB,kBAAC,EAAD,CAAUpB,KAAMY,EAAYZ,QAGvD,yBACEL,UAAU,oBACV0B,wBAAyB,CAAEC,OAAQT,MAGvC,yBACEC,MAAO,CACLS,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBV,MAAO,OACPW,OAAQ,aAGTjB,EACC,kBAAC,IAAD,CAAMX,GAAIW,EAAKG,YAAYe,KAAMb,MAAOV,GAAxC,IACIK,EAAKG,YAAYI,OAGrB,yBAAKF,MAAO,CAAEc,QAAS,QAAvB,mBAEDlB,EACC,kBAAC,IAAD,CAAMZ,GAAIY,EAASE,YAAYe,KAAMb,MAAOV,GACzCM,EAASE,YAAYI,MADxB,MAIA,yBAAKF,MAAO,CAAEc,QAAS,QAAvB","file":"component---src-templates-blog-post-js-779c1892d4f145cd37fd.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagButton\":\"tagButtonStyles-module--tagButton--DtpfK\"};","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styles from \"./tagButtonStyles.module.scss\"\n\nconst TagButton = ({ tag }) => (\n  <Link className={styles.tagButton} to={`/tags/${tag}`}>\n    {tag}\n  </Link>\n)\n\nexport default TagButton\n","import React, { Fragment } from \"react\"\n\nimport Page from \"./page\"\n\nimport { graphql, Link } from \"gatsby\"\nimport Card from \"../components/presentation/card/card\"\nimport TagButton from \"../components/presentation/buttons/tagButton/tagButton\"\n\nconst TagsList = ({ tags = [] }) =>\n  tags.map((tag, idx) => {\n    return (\n      <Fragment key={idx}>\n        <TagButton tag={tag} />{\" \"}\n      </Fragment>\n    )\n  })\n\nconst navLinkStyle = {\n  color: \"inherit\",\n}\n\nexport default function Template({ data, ...otherProps }) {\n  const {\n    pageContext: { next, previous },\n  } = otherProps\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Page>\n      <Card>\n        <div className=\"blog-post-container\" style={{ width: \"100%\" }}>\n          <div className=\"blog-post\">\n            <h1>{frontmatter.title}</h1>\n            <h5>\n              {frontmatter.date} - Time To Read: {markdownRemark.timeToRead}{\" \"}\n              mins\n            </h5>\n            {frontmatter.tags && frontmatter.tags.length && (\n              <div style={{ fontSize: \"13px\" }}>\n                <strong>tags:</strong> <TagsList tags={frontmatter.tags} />\n              </div>\n            )}\n            <div\n              className=\"blog-post-content\"\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              width: \"100%\",\n              margin: \"25px 0px\",\n            }}\n          >\n            {next ? (\n              <Link to={next.frontmatter.path} style={navLinkStyle}>\n                ←{next.frontmatter.title}\n              </Link>\n            ) : (\n              <div style={{ opacity: \"0.3\" }}>← No More Posts</div>\n            )}\n            {previous ? (\n              <Link to={previous.frontmatter.path} style={navLinkStyle}>\n                {previous.frontmatter.title} →\n              </Link>\n            ) : (\n              <div style={{ opacity: \"0.3\" }}>No More Posts →</div>\n            )}\n          </div>\n        </div>\n      </Card>\n    </Page>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      timeToRead\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}