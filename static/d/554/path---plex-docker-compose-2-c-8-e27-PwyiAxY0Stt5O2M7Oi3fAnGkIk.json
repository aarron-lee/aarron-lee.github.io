{"data":{"markdownRemark":{"html":"<p>So recently I have been using docker extensively at work, primarily for setting up/improving a local dev environment, as well as running some containers on AWS ECS.</p>\n<p>To be honest, I initially didn't quite understand what docker was used for. I mean, \"containers\"? Why not just use a VM? But once it really clicked in my head, whoa, containers. They're awesome.</p>\n<p>If I had to distill what I discovered about docker into a few key points, it would be the following:</p>\n<ol>\n<li>It lets you create isolated environments (aka containers), each with it's own set of dependencies (aka no more conflicting dependencies!)</li>\n<li>You can configure these environments as a document, and then share these documents with others.</li>\n<li>Given these documents, you can easily and reliably reproduce these environments</li>\n<li>You don't need to manually install dependencies, etc. docker handles that for you!</li>\n<li>Unlike a VM, docker containers are NOT using virtualized hardware, etc. Docker uses cgroups and namespaces to isolate the environments from each other, but they are still directly issuing calls to the host linux kernel. This means containers are more like programs; they spin up fast, are cheap to stop and start, and don't incur the performance overhead of running a virtual machine</li>\n</ol>\n<p>This enables some pretty powerful behavior.</p>\n<p>For example, I can spin up a vanilla linux server with a fresh OS install. Once you install docker on it, you can then feed docker some dockerfiles, it can then use those dockerfiles to spin up a bunch of isolated environments (such as Postgresql database, a rails web server, a plex server, pretty much anything with a <a href=\"https://hub.docker.com/\">dockerfile</a>).</p>\n<p>Each environment will have their own isolated dependencies, and you can even set up networking, port forwarding, etc, between the host machine and these environments! And this is portable to any other linux machine, since all you need on other machines is docker and whatever dockerfiles you used before.</p>\n<p>Since docker makes setting up an environment both extremely simple and reproduceable, it seemed like a perfect tool to setup a Plex server.</p>\n<p>Lo and behold, plex already has an <a href=\"https://hub.docker.com/r/plexinc/pms-docker/\">official docker image</a>, which should theoretically make it extremely easy to setup a plex server.</p>\n<p>Unfortunately, Plex inc doesn't officially provide a <code class=\"language-text\">docker-compose.yml</code> config file, which would have made it even easier to setup the server. It would have been as simple as installing docker, downloading the repo, and running the command <code class=\"language-text\">docker-compose up</code> in terminal. Alas, some manual config is still needed.</p>\n<p>The final docker-compose.yml file I came up with is:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.7\"</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">plex</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> plexinc/pms<span class=\"token punctuation\">-</span>docker\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> plex\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> unless<span class=\"token punctuation\">-</span>stopped\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> TZ=America/New_York\n      <span class=\"token punctuation\">-</span> PLEX_CLAIM=(insert claim token here)\n    <span class=\"token key atrule\">network_mode</span><span class=\"token punctuation\">:</span> host\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> /path/on/host/to/save/to<span class=\"token punctuation\">:</span>/config\n      <span class=\"token punctuation\">-</span> /path/on/host/to/save/transcodes/to<span class=\"token punctuation\">:</span>/transcode\n      <span class=\"token punctuation\">-</span> /path/on/host/to/save/data/to<span class=\"token punctuation\">:</span>/data</code></pre></div>","timeToRead":2,"frontmatter":{"date":"April 13, 2019","path":"/plex-docker-compose","title":"Running a Plex Media Server with Docker Compose","tags":["docker","plex"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"pathSlug":"/plex-docker-compose","next":null,"previous":null}}